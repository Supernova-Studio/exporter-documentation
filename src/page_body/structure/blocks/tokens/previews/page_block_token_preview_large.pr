{[ const token = context /]}

{[ if token.tokenType.equals("Color") ]}
    <div id="token-container-{{ token.id }}" class="preview" style="background-color: transparent"></div>
    <script>
        createTokenScene("token-container-{{ token.id }}", "{{ token.value.hex }}")
    </script>
{[ elseif token.tokenType.equals("Border")]}
    <div class="preview">
        <div class="token-preview-container large">
            <div class="token-preview-container-border large" style="border: {{ token.value.width.measure }}px solid #{{ token.value.color.hex }};"></div>
        </div>
    </div>
{[ elseif token.tokenType.equals("Blur")]}
    {[ let measure = token.value.radius.measure /]}
        {[ switch token.value.type ]}
            {[ case "Background" ]}
                <div class="preview checkered-background">
                    <div class="token-preview-container large">
                        <div class="token-preview-container-blur large" style="background-color: transparent; border: 1px solid #ccc; backdrop-filter: blur({{ measure }}px);"></div>
                        <div class="token-preview-container-blur-text-unblurred" style="color: #141618">
                        {{ measure }}
                        </div>
                    </div>
                </div>
            {[ case "Layer" ]}
                <div class="preview">
                    <div class="token-preview-container large">
                        <div class="token-preview-container-blur large" style="background-color: #363a3e; filter: blur({{ measure }}px);"></div>
                        <div class="token-preview-container-blur-text-unblurred">
                        {{ measure }}
                        </div>
                    </div>
                </div>
        {[/]}
{[ elseif token.tokenType.equals("Font")]}
    <div class="preview">Ag</div>
{[ elseif token.tokenType.equals("Gradient")]}
    <div class="preview" style="background: {{ gradientTokenValue(token) }}"></div>
{[ elseif token.tokenType.equals("Measure")]}
    <div class="preview">px</div>
{[ elseif token.tokenType.equals("Radius")]}
    <div class="preview" style="border-radius: {{ token.value.radius.measure}}px"></div>
{[ elseif token.tokenType.equals("Shadow")]}
    <div class="preview">
        <div style="width: 64px; height: 64px; box-shadow: {{ shadowTokenValue(token) }}"></div>
    </div>
{[ elseif token.tokenType.equals("Text")]}
    <div class="preview small-text">{{ token.value.text }}</div>
{[ elseif token.tokenType.equals("Typography")]}
    <div class="preview">Ag</div>
{[ elseif token.tokenType.equals("GenericToken")]}
    <div class="preview small-text">{{ token.value.text }}</div>
{[/]}