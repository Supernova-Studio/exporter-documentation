{* Fetch block from injection context, expected type 'Token' *}
{[ const block = context /]}

{[ let variant = block.variantKey /]}

{* Ignore block if it doesn't have id set *}
{[ if block.tokenId ]}
  <div class="content-block content-block--token-container">

  {[ const token = ds.tokenById(block.tokenId) /]}

    {[ if (variant === "table") ]}
    {* Displaying the token as a table row *}
      <div class="token-table">
          {[ inject "page_block_token_variant_table_item" context ({"token": token, "block": block}) /]}
      </div>

      {[ elseif (variant.contains("stack")) ]}
      {* Stack â€“ Displaying the list of tokens as a stack (great for colors) *}

        <div class="stack{{ getVariantClass(variant) }}">
            {[ inject "page_block_token_variant_stack_item" context ({"token": token, "block": block}) /]}
        </div>

    {[ else ]}
    {* Default variant - displayed as a grid, support 2/3/4 items in a row (4 is default) *}

      <div class="grid{{ getVariantClass(variant) }}">
          {[ inject "page_block_token_variant_grid_item" context ({"token": token, "block": block}) /]}
      </div>

    {[/]} 
  </div>
{[/]}