{* Fetch block from injection context, expected type 'Token' *}
{[ const token = context.token /]}
{[ const block = context.block /]}

{[ if token ]}
<div class="token-grid--item">
  {* Render large tile preview *}
    {[ if (block.swatches && (block.swatches.length > 0)) ]}
      {[ if (block.swatches.length === 1) ]}
      
        {[ const themeIds = block.swatches[0].selectedThemeIds /]}
        {[ const themes = ds.themesByIds(themeIds) /]}
        {[ const themedToken = ds.tokensByApplyingThemes([token.id], themeIds) /]}
        {[ inject "page_block_token_preview_large" context ({"token": themedToken[0], "themes": themes})  /]}
      {[ else ]}
         <div class="token-previews">
          {[ for swatch in block.swatches ]}
            {[ const themes = ds.themesByIds(swatch.selectedThemeIds) /]}
            {[ const themedToken = ds.tokensByApplyingThemes([token.id], swatch.selectedThemeIds) /]}
            
            {[ inject "page_block_token_preview_large" context ({"token": themedToken[0], "themes": themes})  /]} 
          {[/]} 
        </div>
      {[/]}
    {[/]}
  <div class="info">
    <div class="title">{{ token.name }}</div>
    {[ if token.description ]}
      <div class="description">{{ token.description }}</div>
    {[/]}
  </div>
  {[ inject "page_block_token_properties" context ({"token": token, "block": block})  /]}

</div>
{[/]}