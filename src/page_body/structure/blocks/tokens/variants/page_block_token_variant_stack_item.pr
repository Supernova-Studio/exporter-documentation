{* Fetch block from injection context, expected type 'Token' *}
{[ const token = context.token /]}
{[ const block = context.block /]}

{[ if token ]}
{[ if token.tokenType.equals("Color") ]}
    <div class="stack-item is-color">
        {[ if (block.swatches && block.swatches.length > 0) ]}
            {[ if (block.swatches.length === 1) ]}
                {[ const swatch = block.swatches[0] /]}
                {[ const themedToken = ds.tokensByApplyingThemes([token.id], swatch.selectedThemeIds) /]}
                {[ const themes = ds.themesByIds(swatch.selectedThemeIds) /]}
                
                {[ inject "page_block_token_preview_stack" context ({"token": themedToken[0], "themes": themes})  /]}
            {[ else ]}
                <div class="previews-side-by-side">
                    {[ for swatch in block.swatches ]}
                        {[ const themes = ds.themesByIds(swatch.selectedThemeIds) /]}
                        {[ const themedToken = ds.tokensByApplyingThemes([token.id], swatch.selectedThemeIds) /]}
                        
                        {[ inject "page_block_token_preview_stack" context ({"token": themedToken[0], "themes": themes})  /]}
                    {[/]}
                </div>
            {[/]}
        {[/]}
    </div>
{[ else ]}
    <div class="stack-item fallback">
        {[ inject "page_block_token_preview_stack" context ({"token": token, "themes": [] })  /]}
    </div>
{[/]}
{[/]}