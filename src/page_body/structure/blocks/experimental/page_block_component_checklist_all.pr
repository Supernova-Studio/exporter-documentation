
{* Get block *}
{[ const block = context /]}

{* Get properties *}
{[ let checkedImage = assetUrl("icons/component-checklist-yes.svg", ds.documentationDomain()) /]}
{[ let uncheckedImage = assetUrl("icons/component-checklist-no.svg", ds.documentationDomain()) /]}
{[ let components = ds.allComponents() /]}
{[ let header = block.properties.header /]}
{[ let propertiesToHighlight = block.properties.propertiesToHighlight ? block.properties.propertiesToHighlight : [] /]}

{* Only render if there is at least one component *}
{[ if (components.count() > 0) ]}
    {[ let firstComponent = components.first() /]}
 
    {* Render header if enabled *}
    {[ if header ]}
        <h3 class="checklist-header">{{ header }}</h3>
    {[/]}

    {* Scroll wrapper boundary *}
    <div class="component-table-wrapper-outer">
    <div class="component-table-wrapper-inner">
        <table class="data-table header-row header-column" style="width: {{ tableWidth }}px">

        {* Create header row *}
        <tr>
            <th class="left">Component Name</th>
            {[ for property in firstComponent.properties ]}
                {[ if (propertiesToHighlight.contains(property.persistentId) && !["Link"].contains(property.propertyType)) ]}
                <td class="center">{{ property.name }}</td>
                {[/]}
            {[/]}
            <td class="center">Last edited</td>
        </tr>  

        {* Create data rows *}
        {* Generate different view based on the type of property *}
        {[ for component in components ]}
            {[ let propertyValues = component.propertyValues /]}
            <tr>
                <th>{{ component.name }}</th>
                {[ for property in component.properties ]}
                    {* Only show selected properties in addition to name *}
                    {[ if (propertiesToHighlight.contains(property.persistentId) && !["Link"].contains(property.propertyType)) ]}
                        {[ switch property.propertyType ]}
                            {[ case "Text" ]}
                            {[ case "Number" ]}
                            {[ case "Generic" ]}
                                <td>{{ propertyValues[property.codeName] ? propertyValues[property.codeName] : "-"}}</td>
                            {[ case "Boolean" ]}
                                <td class="center"><img src="{{ propertyValues[property.codeName] ? checkedImage : uncheckedImage }}" /></p>
                            {[ case "Select" ]}
                                {[ let optionValue = "" /]}
                                {[ let optionColor = "" /]}
                                {[ let contrastColor = "" /]}
                                {[ for option in property.options ]}
                                    {[ if (option.id === propertyValues[property.codeName]) ]}
                                        {[ optionValue = option.name /]}
                                        {[ optionColor = option.backgroundColor /]}
                                        {[ contrastColor = contrastColor(optionColor) /]}
                                    {[/]}
                                {[/]}  
                                <td class="center">
                                  <span class="component-select-tag {{ contrastColor }}" style="background-color: {{ optionColor }}">
                                    {[ if (optionValue !== '') ]}{{ optionValue }}{[ else ]}Not set{[/]}
                                  </span>
                                </td>
                            {[ case "Link" ]}
                                <td class="center"><a href="#" target="_blank">Open link</a></td>
                            {[ case "URL" ]}
                                <td class="center">
                                {[ if propertyValues[property.codeName] ]}
                                    <a href="{{ propertyValues[property.codeName] }}" target="_blank">Open link</a>
                                {[ else ]}
                                    -
                                {[/]}
                                </td>
                        {[/]}
                    {[/]}
                {[/]}
                <td class="center">{{ component.updatedAt.formatDate("MMMM DD, YYYY") }}</td>
            </tr>
        {[/]}
        </table>
    </div>
    </div> 
{[ else ]}
{* No component available to be shown just yet *}
<p>There are no components to render the component list just yet. Please add the first component and republish</p>
{[/]}
